#include<stdio.h>
#include<stdlib.h>
struct Node
{
    int data;
    struct Node * next;
};
void linkedlistTraversal(struct Node * ptr)
{
    while (ptr!=NULL)
    {
        printf("Element : %d\n",ptr->data);
        ptr=ptr->next;
    } 
}
// Case1: Deleting the first element from the linked list
struct Node * deleteFirst(struct Node*head)
{
    struct Node * ptr=head;
    head=head->next;
    free(ptr);
    return head;
}

// Case2: Deleting the element at a given index from the linked list
struct Node * deleteAtIndex(struct Node*head,int index)
{
    struct Node * p=head;
    struct Node * q=head->next;
    for (int i = 0; i < index-1; i++)
    {
        p=p->next;
        q=q->next;
    }
    p->next=q->next;
    free(q);
    return head;
}

// Case3: Deleting the last element from the linked list
struct Node * deleteAtLast(struct Node*head)
{
    struct Node * p=head;
    struct Node * q=head->next;
    while (q->next !=NULL)          
    {
        p=p->next;
        q=q->next;
    }
    p->next=NULL;
    free(q);
    return head;
}

int main()
{
    struct Node*head;
    struct Node*second;
    struct Node*third;
    struct Node*fourth;
    // Allocate memory for nodes in the linked list in Heap
    head=(struct Node*)malloc(sizeof(struct Node));
    second=(struct Node*)malloc(sizeof(struct Node));
    third=(struct Node*)malloc(sizeof(struct Node));
    fourth=(struct Node*)malloc(sizeof(struct Node));
    // Link first and second node
    head->data=4;
    head->next =second;

    // Link second and third node
    second->data=3;
    second->next =third;
    
    
    // Link third and fourth node
    third->data=8;
    third->next =fourth;

    // Terminate the list at the fourth node
    fourth->data=1;
    fourth->next =NULL;

    printf("LINKED LIST  BEFORE DELETION:\n");
    linkedlistTraversal(head);
    
    // head=deleteFirst(head);//For deleting the first element of the linked list
    head=deleteAtIndex(head,2);//For deleting the elment at a given index from the linked list
    // head=deleteAtLast(head);//For deleting the last node from the linked list

    printf("LINKED LIST AFTER DELETION:\n");
    linkedlistTraversal(head);

    return 0;
}